name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  
  workflow_dispatch:


jobs:
  lint:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.test.txt
          pip install -e .
      - name: Look for style errors
        run: pflake8
      - name: Check for importing style
        run: isort --profile=black --check --diff dundie tests integration
      - name: Look for auto formatting errors
        run: black --check --diff dundie tests integration

  tests:
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.test.txt
          pip install -e .
      - name: Run tests
        run: pytest -v --junitxml=test-result.xml
      - name: Publish junit results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "test-result.xml"
          check_name: Test result (Python ${{ matrix.python-version }})